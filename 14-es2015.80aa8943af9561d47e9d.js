(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"xps+":function(e,o,n){"use strict";n.r(o),n.d(o,"GettingStartedModule",(function(){return b}));var t=n("uHuC"),l=n("PCNd"),r=n("sEIs"),u=n("EM62");let a=(()=>{class e{constructor(){this.codeExampleComponent=c,this.codeExampleModule=s,this.codeExampleAppModule=m,this.codeExampleSharedModule=d}ngOnInit(){}}return e.\u0275fac=function(o){return new(o||e)},e.\u0275cmp=u.Fb({type:e,selectors:[["demo-getting-started"]],decls:84,vars:4,consts:[[1,"wrapper"],[3,"highlight"]],template:function(e,o){1&e&&(u.Rb(0,"div",0),u.Rb(1,"h1"),u.uc(2,"Getting started"),u.Qb(),u.Rb(3,"p"),u.uc(4," Start using Angular elements or any other web components in your applications by following these 5 steps... "),u.Qb(),u.Rb(5,"ol"),u.Rb(6,"li"),u.uc(7,"Install "),u.Rb(8,"code"),u.uc(9,"npm i @angular-extensions/elements"),u.Qb(),u.Qb(),u.Rb(10,"li"),u.uc(11," Add "),u.Rb(12,"code"),u.uc(13," import { LazyElementsModule } from '@angular-extensions/elements'; "),u.Qb(),u.Qb(),u.Rb(14,"li"),u.uc(15," Append "),u.Rb(16,"code"),u.uc(17,"LazyElementsModule"),u.Qb(),u.uc(18," to the "),u.Rb(19,"code"),u.uc(20,"imports: []"),u.Qb(),u.uc(21," of your "),u.Rb(22,"code"),u.uc(23,"AppModule"),u.Qb(),u.Qb(),u.Rb(24,"li"),u.uc(25," Add new "),u.Rb(26,"code"),u.uc(27,"schemas: []"),u.Qb(),u.uc(28," property with "),u.Rb(29,"code"),u.uc(30,"CUSTOM_ELEMENTS_SCHEMA"),u.Qb(),u.uc(31," value to "),u.Rb(32,"code"),u.uc(33,"@NgModule"),u.Qb(),u.uc(34," decorator of your "),u.Rb(35,"code"),u.uc(36,"AppModule"),u.Qb(),u.Qb(),u.Rb(37,"li"),u.uc(38," Use "),u.Rb(39,"code"),u.uc(40,"*axLazyElement"),u.Qb(),u.uc(41," directive on an element you wish to load and pass in the url of the element bundle "),u.Qb(),u.Qb(),u.Rb(42,"p"),u.uc(43,"That way we get..."),u.Qb(),u.Mb(44,"pre",1),u.Rb(45,"p"),u.uc(46," and can use "),u.Rb(47,"code"),u.uc(48,"*axLazyElement"),u.Qb(),u.uc(49," in the template of our component... "),u.Qb(),u.Mb(50,"pre",1),u.Rb(51,"h2"),u.uc(52,"Using in other (and lazy loaded) modules"),u.Qb(),u.Rb(53,"p"),u.uc(54," Any non-trivial Angular application will usually contain more than a single "),u.Rb(55,"code"),u.uc(56,"AppModule"),u.Qb(),u.uc(57,". "),u.Qb(),u.Rb(58,"p"),u.uc(59,"More so, some of these additional modules could be lazy loaded."),u.Qb(),u.Rb(60,"p"),u.uc(61," Any module which contains components which are using "),u.Rb(62,"code"),u.uc(63,"*axLazyElement"),u.Qb(),u.uc(64," directive has to have "),u.Rb(65,"code"),u.uc(66,"schemas: [CUSTOM_ELEMENTS_SCHEMA]"),u.Qb(),u.uc(67," in its "),u.Rb(68,"code"),u.uc(69,"@NgModule"),u.Qb(),u.uc(70," decorator configuration. Also the module has to either import "),u.Rb(71,"code"),u.uc(72,"LazyElementsModule"),u.Qb(),u.uc(73,". Let's have a look on the following example... "),u.Qb(),u.Mb(74,"pre",1),u.Rb(75,"p"),u.uc(76," Or import other module (most commonly "),u.Rb(77,"code"),u.uc(78,"SharedModule"),u.Qb(),u.uc(79,") which both imports and exports "),u.Rb(80,"code"),u.uc(81,"LazyElementsModule"),u.Qb(),u.uc(82,". "),u.Qb(),u.Mb(83,"pre",1),u.Qb()),2&e&&(u.zb(44),u.hc("highlight",o.codeExampleAppModule),u.zb(6),u.hc("highlight",o.codeExampleComponent),u.zb(24),u.hc("highlight",o.codeExampleModule),u.zb(9),u.hc("highlight",o.codeExampleSharedModule))},directives:[t.b],styles:["ol[_ngcontent-%COMP%]{margin:0 0 20px}h2[_ngcontent-%COMP%]{margin:40px 0 10px;font-weight:700}.responsive-large[_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%], .responsive-large   [_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]{width:70%}"]}),e})();const c="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'your-org-feature',\n  template: `\n    <some-element *axLazyElement=\"elementUrl\"></some-element>\n  `\n})\nexport class FeatureComponent {\n  elementUrl = 'https://your-org.com/elements/some-element.js';\n}\n",s="import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n\nimport { FeatureComponent } from './feature-component';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  imports: [CommonModule, LazyElementsModule], // or imports: [SharedModule]\n  declarations: [FeatureComponent]\n})\nexport class FeatureModule {}\n",m="import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  imports: [BrowserModule, LazyElementsModule],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",d="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n\n@NgModule({\n  imports: [CommonModule, LazyElementsModule],\n  exports: [CommonModule, LazyElementsModule]\n})\nexport class SharedModule {}\n",p=[{path:"",component:a}];let i=(()=>{class e{}return e.\u0275mod=u.Jb({type:e}),e.\u0275inj=u.Ib({factory:function(o){return new(o||e)},imports:[[r.d.forChild(p)],r.d]}),e})(),b=(()=>{class e{}return e.\u0275mod=u.Jb({type:e}),e.\u0275inj=u.Ib({factory:function(o){return new(o||e)},imports:[[t.c,l.a,i]]}),e})()}}]);